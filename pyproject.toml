[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "keynote-mcp-server"
version = "1.0.0"
description = "AI-Powered Keynote Presentation Automation using Model Context Protocol (MCP)"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Senior AI Engineer", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Office Suites",
    "Operating System :: MacOS",
]
keywords = ["mcp", "keynote", "ai", "automation", "llm", "presentation", "macos"]
requires-python = ">=3.8"
dependencies = [
    "mcp>=1.0.0",
    "google-generativeai>=0.8.0",
    "python-dotenv>=1.0.0",
    "Pillow>=10.0.0",
    "pyautogui>=0.9.54",
    "applescript>=1.0.0",
    "screeninfo>=0.8.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/keynote-mcp-server"
Repository = "https://github.com/yourusername/keynote-mcp-server.git"
Issues = "https://github.com/yourusername/keynote-mcp-server/issues"
Documentation = "https://github.com/yourusername/keynote-mcp-server#readme"

[project.scripts]
keynote-mcp-server = "src.keynote_mcp_server:main"
keynote-ai-client = "src.ai_client:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"